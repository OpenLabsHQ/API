services:
  postgres:
    image: postgres:17
    container_name: postgres_db_openlabs
    env_file:
      - api/.env
    ports:
      - "${POSTGRES_DEBUG_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fastapi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    container_name: redis_queue_openlabs
    env_file:
      - api/.env
    command: ["redis-server", "--loglevel", "warning", "--requirepass", "${REDIS_QUEUE_PASSWORD:-ChangeMe123!}"]
    volumes:
      - redis-data:/data
    networks:
      - fastapi_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_QUEUE_PASSWORD:-ChangeMe123!}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  worker:
    build:
      target: worker
      context: .
      dockerfile: api/Dockerfile
    env_file:
      - api/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fastapi_network

  fastapi:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: fastapi_app_openlabs
    env_file:
      - api/.env
    environment:
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:3001}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS:-true}
      - CORS_METHODS=${CORS_METHODS:-*}
      - CORS_HEADERS=${CORS_HEADERS:-*}
    ports:
      - "${API_IP_ADDR:-127.0.0.1}:${API_PORT:-8000}:80"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fastapi_network

  init:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: fastapi_init_openlabs
    env_file:
      - api/.env
    command: ["python", "-m", "src.scripts.create_admin"]
    depends_on:
      fastapi:
        condition: service_healthy
    networks:
      - fastapi_network
    restart: on-failure

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${API_URL:-http://localhost:8000}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - fastapi
    networks:
      - fastapi_network
    profiles:
      - frontend

volumes:
  postgres_data:
  redis-data:

networks:
  fastapi_network:
    driver: bridge
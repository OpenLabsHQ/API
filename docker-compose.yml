services:
  postgres:
    image: postgres:17
    container_name: postgres_db_openlabsx
    env_file:
      - .env
    ports:
      - "${POSTGRES_DEBUG_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fastapi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Create admin user after app has started
  init:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_init
    env_file:
      - .env
    command: ["python", "-m", "src.scripts.create_admin"]
    depends_on:
      fastapi:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - fastapi_network

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    env_file:
      - .env
    ports:
      - "${API_IP_ADDR:-127.0.0.1}:${API_PORT:-8000}:80"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - fastapi_network


  redis:
    image: redis:alpine
    container_name: redis-queue
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    networks:
      - fastapi_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis-data:

networks:
  fastapi_network:
    driver: bridge
